V 14
2
LANG:10027 0 
LANG:10001 0 
PANEL,-1 -1 191 80 N "_3DFace" 2
"$dpe"
"$dpe_value"
"main()
{
  initializePanel();
}" 0
 E E E E 1 -1 -1 0  39.810243261886 19.89978278780616
""0  1
E "/////////////////////////////////////////////////////////////////////////////
//
//  WinCC OA Open Library
//
//  Author:     DMC, Inc. http://www.dmcinfo.com
//
//  File:       fpBarGraph.pnl
//
//  Revisions:  06/19/17 - Leon Grossman (leon.grossman@dmcinfo.com) :
//                         Created
//              10/13/18 - Oliver Reed (oliver.reed@dmcinfo.com) :
//                         Changed from pnl to xml
//              02/22/19 - Adapted to fit new Component Class
//
//  Description: Bar Graph Face Plate
//
/////////////////////////////////////////////////////////////////////////////

#uses \"OpenLibrary/Classes/Components/Component\"
#uses \"OpenLibrary/Enums/DirectionType\"
#uses \"OpenLibrary/Classes/Implementations/DisplayBehaviors/Common/DynamicSize\"


private string dp = $dpe;

private ComponentClass BarGraph = ComponentClass(getShape(\"barGraph\"));


public void initializePanel()
{
  BarGraph.addDisplayBehavior(new DynamicSizeDisplayBehaviorClass(dp, getShape(\"barGraphOutline\"), DirectionType::Horizontal));
}" 0
 4
"CBRef" "1"
"EClose" E
"dpi" "120"
"pdpi" "141.585"
0 0 0
""
DISPLAY_LAYER, 1 0 1 0 1 0 1 0 1 0 1 0 1 0 1 0
LAYER, 0 
2
LANG:10027 0 
LANG:10001 0 
2 4
"value"
""
1 185.6428571428571 51.34627594627609 E E E 1 E 1 E N "cont_text" E N "_Transparent" E E
 E E
4 0 0 0 0 0
E E E
0
3
LANG:10027 0 
LANG:10001 0 
LANG:10000 0 

4
"sizePolicy" "Fixed Fixed"
"layoutAlignment" "AlignCenter"
"dashclr"N "_Transparent"
"antiAliased" "0"
"main()
{

  EP_textFieldIn();
}
void EP_textFieldIn()
{
  dyn_errClass err;

  if( !dpExists( $dpe_value+\".OUT\"))
  {
    setValue(\"\", \"color\", \"fon_nan\");
    return;
  }

  dpConnect(\"EP_textFieldInCB\",
            $dpe_value+\".OUT\",
            $dpe_value+\".OUT:_online.._invalid\",
            $dpe_value+\".REP\");
  err = getLastError();
  if (dynlen(err) > 0)
    setValue(\"\", \"color\", \"fon_nan\");

}


void EP_textFieldInCB(string dp, float fNewValue, string dpInvalid, bool boInvalid, string dpSource2, bool value)
{
  if (boInvalid || value) {
    setValue(\"\", \"text\", \"\");
  } else {
    setValue(\"\", \"text\", getFormatTagValue(dp, fNewValue) );
  }
}

// SimpleCtrlScript {EP_textFieldIn}
// DP {$dpe_value}
// DPConfig {:_online.._value}
// DPType {float}
// UseDPUnit {TRUE}
// UseDPFormat {TRUE}
// SimpleCtrlScriptEnd {EP_textFieldIn}
" 0
 E 0 1 1 0 1 E 1 0 0.9722148556187842 -116.5 -23.19396561522097 0 E 173 50.88559218559222 197 63
0 2 2 "0s" 0 0 0 193 0 0  185.4761904761905 50.88559218559222 1
3
LANG:10027 34 Arial,-1,10,5,50,0,0,0,0,0,Regular
LANG:10001 26 Arial,-1,11,5,50,0,0,0,0,0
LANG:10000 26 Arial,-1,11,5,50,0,0,0,0,0
0 3
LANG:10027 5 xx.xx
LANG:10001 5 xx.xx
LANG:10000 4 Text
2 6
"unit"
""
1 185.4761904761905 63.99310134310112 E E E 1 E 1 E N "cont_text" E N "_Transparent" E E
 E E
6 0 0 0 0 0
E E E
0
3
LANG:10027 0 
LANG:10001 0 
LANG:10000 0 

4
"sizePolicy" "Fixed Fixed"
"layoutAlignment" "AlignLeft|AlignLeading"
"dashclr"N "_Transparent"
"antiAliased" "0"
"main()
{
  setValue(\"\", \"text\", getTagUnit($dpe_value+\".OUT\"));
}

" 0
 E 0 1 1 0 1 E 1 0 0.9850299401197603 -100.5 -36.8323353293413 0 E 185.4761904761905 64.09523809523809 197 76
0 2 2 "0s" 0 0 0 192 0 0  185.4761904761905 64.09523809523809 1
3
LANG:10027 34 Arial,-1,10,5,50,0,0,0,0,0,Regular
LANG:10001 26 Arial,-1,11,5,50,0,0,0,0,0
LANG:10000 26 Arial,-1,11,5,50,0,0,0,0,0
0 3
LANG:10027 2 xx
LANG:10001 2 xx
LANG:10000 4 Text
0
LAYER, 1 
2
LANG:10027 0 
LANG:10001 0 
0
LAYER, 2 
2
LANG:10027 0 
LANG:10001 0 
0
LAYER, 3 
2
LANG:10027 0 
LANG:10001 0 
0
LAYER, 4 
2
LANG:10027 0 
LANG:10001 0 
0
LAYER, 5 
2
LANG:10027 0 
LANG:10001 0 
0
LAYER, 6 
2
LANG:10027 0 
LANG:10001 0 
0
LAYER, 7 
2
LANG:10027 0 
LANG:10001 0 
0
0
